@using Microsoft.AspNetCore.Identity

@inject SignInManager<IdentityUser> SignInManager
@inject UserManager<IdentityUser> UserManager

<ul class="navbar-nav">
    @if (SignInManager.IsSignedIn(User))
    {
        var user = await UserManager.GetUserAsync(User);
        var roles = await UserManager.GetRolesAsync(user);
        string returnUrl = roles.Contains("Admin") || roles.Contains("Employee") ? Url.Action("Index", "DocumentManager", new { area = "Admin" })
        : Url.Action("Index", "Document", new { area = "User" });

        <li class="nav-item">
            <a id="manage" class="nav-link text-dark" asp-area="Identity" asp-page="/Account/Manage/Index" title="Manage">
                Hello @UserManager.GetUserName(User)!
            </a>
        </li>

        @if (roles.Contains("Admin") || roles.Contains("Employee"))
        {
            <li class="nav-item">
                <a id="manage" class="nav-link text-dark" asp-area="Admin" asp-controller="DocumentManager" asp-action="Index" title="Manage">
                    Admin DashBoard
                </a>
            </li>
        }

        <li class="nav-item">
            <form id="logoutForm" class="form-inline" asp-area="Identity" asp-page="/Account/Logout"
                  asp-route-returnUrl="@returnUrl">
                <button id="logout" type="submit" class="nav-link btn btn-link text-dark border-0">Logout</button>
            </form>
        </li>
    }
    else
    {
        <li class="nav-item">
            <a class="nav-link text-dark" id="register" asp-area="Identity" asp-page="/Account/Register">Register</a>
        </li>
        <li class="nav-item">
            <a class="nav-link text-dark" id="login" asp-area="Identity" asp-page="/Account/Login">Login</a>
        </li>
    }
</ul>
